<UserControl x:Class="IceCreamKioskInformation.ProductDisplay.ProductDisplayUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:IceCreamKioskInformation.ProductDisplay"
             xmlns:convert="clr-namespace:IceCreamKioskInformation.Convertors"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             FlowDirection="RightToLeft"
             mc:Ignorable="d" >

    <UserControl.Resources>
        <convert:Base64ToBitmapImageConvertor x:Key="Base64ToBitmapImageConvertor"/>
    </UserControl.Resources>

    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <materialDesign:Card x:Name="MainCard" UniformCornerRadius="20" materialDesign:ShadowAssist.ShadowDepth="Depth4" Background="#FFEBECF0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="1.5*"/>
                </Grid.RowDefinitions>


                <StackPanel Grid.Row="0" Margin="35, 35, 35, 0">
                    <TextBlock Text="{Binding Product.Name}" FontWeight="Black" FontSize="40" LineHeight="40" LineStackingStrategy="BlockLineHeight" TextWrapping="Wrap"/>
                    <TextBlock Text="{Binding Product.Description}" FontWeight="ExtraBold" FontSize="30" LineHeight="30" LineStackingStrategy="BlockLineHeight" TextWrapping="Wrap"/>

                    <Separator Margin="0, 15"/>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>

                        <Border x:Name="ShopImage" Grid.Column="0" Grid.RowSpan="3" CornerRadius="17" Height="{Binding ElementName=ShopDetails, Path=Height}" HorizontalAlignment="Stretch" Margin="0, 0, 10, 0" FlowDirection="LeftToRight">
                            <Border.Background>
                                <ImageBrush Stretch="UniformToFill" ImageSource="{Binding Product.Shop.ImageURL, Converter={StaticResource Base64ToBitmapImageConvertor}}"/>
                            </Border.Background>
                        </Border>

                        <StackPanel Grid.Column="1" Name="ShopDetails">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="CreditCard" Margin="0 0 3 0" VerticalAlignment="Center"/>
                                <TextBlock VerticalAlignment="Center" FontSize="15">
                                <Run Text="מחיר משוער:"/>
                                <Run Text="{Binding Product.Price}" FontWeight="Bold"/>
                                <Run Text="ש&quot;ח" FontWeight="Bold"/>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Storefront" Margin="0 0 3 0" VerticalAlignment="Center"/>
                                <TextBlock VerticalAlignment="Center" FontSize="15">
                                <Run Text="חנות:"/>
                                <Run Text="{Binding Product.Shop.ShopName}" FontWeight="Bold"/>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="LocationOn" Margin="0 0 3 0" VerticalAlignment="Center"/>
                                <TextBlock VerticalAlignment="Center" FontSize="15">
                                <Run Text="כתובת:"/>
                                <Run Text="בלפור 15, ירושלים" FontWeight="Bold"/>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="LocalPhone" Margin="0 0 3 0" VerticalAlignment="Center"/>
                                <TextBlock VerticalAlignment="Center" FontSize="15">
                                <Run Text="טלפון:"/>
                                <Run Text="{Binding Product.Shop.Phone}" FontWeight="Bold"/>
                                </TextBlock>
                            </StackPanel>
                            <Expander Background="#00000000" Template="{DynamicResource ExpanderControlTemplate1}">
                                <Expander.Resources>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Background" Value="Black"/>
                                    </Style>
                                    <ControlTemplate x:Key="ExpanderControlTemplate1" TargetType="{x:Type Expander}">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="True">
                                            <DockPanel>
                                                <ToggleButton x:Name="HeaderSite" BorderThickness="0" Cursor="Hand" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" Focusable="False" FontSize="15" IsTabStop="False" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0.87">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Border Background="{TemplateBinding Background}" Padding="{Binding (materialDesign:ExpanderAssist.DownHeaderPadding), RelativeSource={RelativeSource TemplatedParent}}">
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <ContentPresenter Grid.Column="1" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"  VerticalAlignment="Center"/>
                                                                                <ToggleButton Grid.Column="0" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center">
                                                                                    <ToggleButton.Style>
                                                                                        <Style TargetType="{x:Type ToggleButton}">
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                        <Border Background="Transparent">
                                                                                                            <VisualStateManager.VisualStateGroups>
                                                                                                                <VisualStateGroup x:Name="CheckStates">
                                                                                                                    <VisualStateGroup.Transitions>
                                                                                                                        <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                                                                            <VisualTransition.GeneratedEasingFunction>
                                                                                                                                <QuarticEase EasingMode="EaseOut"/>
                                                                                                                            </VisualTransition.GeneratedEasingFunction>
                                                                                                                            <Storyboard>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualTransition>
                                                                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                                                                            <Storyboard>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualTransition>
                                                                                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                                                                            <Storyboard>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualTransition>
                                                                                                                        <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                                                                            <VisualTransition.GeneratedEasingFunction>
                                                                                                                                <QuarticEase EasingMode="EaseOut"/>
                                                                                                                            </VisualTransition.GeneratedEasingFunction>
                                                                                                                            <Storyboard>
                                                                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                                                                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualTransition>
                                                                                                                    </VisualStateGroup.Transitions>
                                                                                                                    <VisualState x:Name="Checked">
                                                                                                                        <Storyboard>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-180"/>
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </VisualState>
                                                                                                                    <VisualState x:Name="Unchecked">
                                                                                                                        <Storyboard>
                                                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                                                        </Storyboard>
                                                                                                                    </VisualState>
                                                                                                                </VisualStateGroup>
                                                                                                            </VisualStateManager.VisualStateGroups>
                                                                                                            <materialDesign:PackIcon x:Name="ExpandPath" Foreground="{TemplateBinding Foreground}" Height="15" Kind="KeyboardArrowDown" RenderTransformOrigin="0.5,0.5" Width="15">
                                                                                                                <materialDesign:PackIcon.RenderTransform>
                                                                                                                    <TransformGroup>
                                                                                                                        <ScaleTransform/>
                                                                                                                        <SkewTransform/>
                                                                                                                        <RotateTransform/>
                                                                                                                        <TranslateTransform/>
                                                                                                                    </TransformGroup>
                                                                                                                </materialDesign:PackIcon.RenderTransform>
                                                                                                            </materialDesign:PackIcon>
                                                                                                        </Border>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </ToggleButton.Style>
                                                                                </ToggleButton>
                                                                            </Grid>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </DockPanel>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsExpanded" Value="True">
                                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="ExpandDirection" Value="Right">
                                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                                <Setter Property="Style" TargetName="HeaderSite">
                                                    <Setter.Value>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Border Padding="{TemplateBinding Padding}">
                                                                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                                                <Grid.RowDefinitions>
                                                                                    <RowDefinition Height="19"/>
                                                                                    <RowDefinition Height="*"/>
                                                                                </Grid.RowDefinitions>
                                                                                <Grid>
                                                                                    <Grid.LayoutTransform>
                                                                                        <TransformGroup>
                                                                                            <RotateTransform Angle="-90"/>
                                                                                        </TransformGroup>
                                                                                    </Grid.LayoutTransform>
                                                                                    <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                                                    <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FFFFFF" StrokeThickness="2" VerticalAlignment="Center"/>
                                                                                </Grid>
                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                                            </Grid>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                                                <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                                                <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                                                <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                                                <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                                                <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                                                <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="ExpandDirection" Value="Up">
                                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                                <Setter Property="Style" TargetName="HeaderSite">
                                                    <Setter.Value>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Border Padding="{TemplateBinding Padding}">
                                                                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="19"/>
                                                                                    <ColumnDefinition Width="*"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <Grid>
                                                                                    <Grid.LayoutTransform>
                                                                                        <TransformGroup>
                                                                                            <RotateTransform Angle="180"/>
                                                                                        </TransformGroup>
                                                                                    </Grid.LayoutTransform>
                                                                                    <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                                                    <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                                                </Grid>
                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                                            </Grid>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                                                <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                                                <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                                                <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                                                <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                                                <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                                                <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="ExpandDirection" Value="Left">
                                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                                <Setter Property="Style" TargetName="HeaderSite">
                                                    <Setter.Value>
                                                        <Style TargetType="{x:Type ToggleButton}">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                        <Border Padding="{TemplateBinding Padding}">
                                                                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                                                <Grid.RowDefinitions>
                                                                                    <RowDefinition Height="19"/>
                                                                                    <RowDefinition Height="*"/>
                                                                                </Grid.RowDefinitions>
                                                                                <Grid>
                                                                                    <Grid.LayoutTransform>
                                                                                        <TransformGroup>
                                                                                            <RotateTransform Angle="90"/>
                                                                                        </TransformGroup>
                                                                                    </Grid.LayoutTransform>
                                                                                    <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                                                    <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                                                </Grid>
                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                                            </Grid>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                                                <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                                                <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                                                <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                                                <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                                                <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                                                <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Expander.Resources>
                                <Expander.Header>
                                    <TextBlock Text="מידע נוסף" FontSize="15"/>
                                </Expander.Header>
                                <Expander.Style>
                                    <Style/>
                                </Expander.Style>
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="Web" Margin="0 0 3 0" VerticalAlignment="Center"/>
                                        <TextBlock VerticalAlignment="Center" FontSize="15">
                                <Run Text="אתר:"/>
                                <Hyperlink NavigateUri="{Binding Product.Shop.Website}" FontWeight="Bold" Command="{Binding OpenURLCMD}" CommandParameter="{Binding Product.Shop.Website}">
                                    <Run Text="{Binding Product.Shop.Website}" FontWeight="Bold"/>
                                </Hyperlink>
                                        </TextBlock>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Product.Shop.Facebook.Length, Converter={StaticResource NotZeroConverter}}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                        <materialDesign:PackIcon Kind="FacebookBox" Margin="0 0 3 0" VerticalAlignment="Center"/>
                                        <TextBlock VerticalAlignment="Center" FontSize="15">
                                <Run Text="פייסבוק:"/>
                                <Hyperlink NavigateUri="{Binding Product.Shop.Facebook}" FontWeight="Bold" Command="{Binding OpenURLCMD}" CommandParameter="{Binding Product.Shop.Facebook}">
                                    <Run Text="{Binding Product.Shop.Facebook}" FontWeight="Bold"/>
                                </Hyperlink>
                                        </TextBlock>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Product.Shop.Instagram.Length, Converter={StaticResource NotZeroConverter}}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                        <materialDesign:PackIcon Kind="Instagram" Margin="0 0 3 0" VerticalAlignment="Center"/>
                                        <TextBlock VerticalAlignment="Center" FontSize="15">
                                <Run Text="אינסטגרם:"/>
                                <Hyperlink NavigateUri="{Binding Product.Shop.Instagram}" FontWeight="Bold" Command="{Binding OpenURLCMD}" CommandParameter="{Binding Product.Shop.Instagram}">
                                    <Run Text="{Binding Product.Shop.Instagram}" FontWeight="Bold"/>
                                </Hyperlink>
                                        </TextBlock>
                                    </StackPanel>
                                </StackPanel>
                            </Expander>
                        </StackPanel>
                    </Grid>

                    <Separator Margin="0, 15"/>
                </StackPanel>

                <Grid Grid.Row="1" Margin="20, 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0" Margin="10" x:Name="RatingAvgStackPanel">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" FontSize="15" Text="דירוג ממוצע:" LineHeight="15" LineStackingStrategy="BlockLineHeight"/>
                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Star" VerticalAlignment="Center" Height="30" Width="30"/>
                            <TextBlock FontSize="50"  FontWeight="Black" Text="{Binding RatingAverage, StringFormat=N1}"/>
                        </StackPanel>
                        <Grid VerticalAlignment="Stretch" Grid.Row="2" FlowDirection="RightToLeft">
                            <Grid.Resources>
                                <Style TargetType="lvc:RowSeries">
                                    <Setter Property="StrokeThickness" Value="0"></Setter>
                                    <Setter Property="Stroke" Value="White"></Setter>
                                    <Setter Property="Fill" Value="Black"></Setter>
                                    <Setter Property="MaxRowHeigth" Value="10"></Setter>
                                </Style>
                                <Style TargetType="lvc:Axis">
                                    <Setter Property="FontSize" Value="13"></Setter>
                                    <Setter Property="Foreground" Value="Black"></Setter>
                                    <Style.Triggers>
                                        <Trigger Property="AxisOrientation" Value="X">
                                            <Setter Property="Foreground" Value="#00000000"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                                <Style TargetType="lvc:Separator">
                                    <Setter Property="StrokeThickness" Value="5"></Setter>
                                    <Setter Property="Stroke" Value="#00000000"></Setter>
                                    <Style.Triggers>
                                        <Trigger Property="AxisOrientation" Value="X">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                            <Setter Property="Step" Value="1"></Setter>
                                        </Trigger>
                                        <Trigger Property="AxisOrientation" Value="Y">
                                            <Setter Property="Step" Value="1"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Resources>
                            <lvc:CartesianChart DataTooltip="{x:Null}">
                                <lvc:CartesianChart.AxisY>
                                    <lvc:Axis MinValue="1"></lvc:Axis>
                                </lvc:CartesianChart.AxisY>
                                <lvc:CartesianChart.Series>
                                    <lvc:RowSeries Values="{Binding RatingPercentage}"/>
                                </lvc:CartesianChart.Series>
                            </lvc:CartesianChart>
                        </Grid>
                    </Grid>

                    <DockPanel Grid.Column="2" Margin="10">
                        <TextBlock DockPanel.Dock="Top" VerticalAlignment="Center" HorizontalAlignment="Stretch" FontSize="15" Text="פופולריות בשנה האחרונה:" LineHeight="15" LineStackingStrategy="BlockLineHeight"/>
                        <Grid>
                            <Grid.Resources>
                                <Style TargetType="lvc:LineSeries">
                                    <Setter Property="StrokeThickness" Value="3"></Setter>
                                    <Setter Property="Stroke" Value="Black"></Setter>
                                    <Setter Property="Fill" Value="#4EA5A5A5"></Setter>
                                    <Setter Property="PointGeometrySize" Value="0"></Setter>
                                    <Setter Property="LineSmoothness" Value="3"></Setter>
                                </Style>
                                <Style TargetType="lvc:Axis">
                                    <Setter Property="ShowLabels" Value="True"></Setter>
                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                </Style>
                                <Style TargetType="lvc:Separator">
                                    <Setter Property="Stroke" Value="#00000000"></Setter>
                                </Style>
                            </Grid.Resources>
                            <lvc:CartesianChart Series="{Binding PopularityValues}" VerticalAlignment="Stretch" Hoverable="True" DataTooltip="{x:Null}">
                                <lvc:CartesianChart.AxisY>
                                    <lvc:Axis Visibility="Collapsed"/>
                                </lvc:CartesianChart.AxisY>
                                <lvc:CartesianChart.AxisX>
                                    <lvc:Axis Labels="{Binding PopularityMonthLabels}"></lvc:Axis>
                                </lvc:CartesianChart.AxisX>
                            </lvc:CartesianChart>
                        </Grid>
                    </DockPanel>
                </Grid>

                <Border x:Name="BigImageView" Grid.RowSpan="3" CornerRadius="17" materialDesign:ShadowAssist.ShadowDepth="Depth4" Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}" HorizontalAlignment="Stretch" Margin="30" FlowDirection="LeftToRight">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ShopImage, Path=IsMouseOver}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Border.Background>
                        <ImageBrush Stretch="UniformToFill" ImageSource="{Binding Product.Shop.ImageURL, Converter={StaticResource Base64ToBitmapImageConvertor}}"/>
                    </Border.Background>
                </Border>

            </Grid>
        </materialDesign:Card>

    </Grid>
</UserControl>
